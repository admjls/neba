<section><header><h2 id="bean_scopes">Support for web-specific bean scopes</h2></header>
<p>Beans in Spring have scopes. By default, beans are application scoped
    (i.e. singletons). @ResourceModels have prototypical scope, i.e. they are re-created every time they are obtained from
    the bean factory. In a web context, objects may also be scoped to the current request or the current session.<br/>
    NEBA provides support for the request scope, i.e. a bean may be defined like so:</p>

{% highlight java %}
@Component
@Scope(WebApplicationContext.SCOPE_REQUEST)
public class MyType {
  ...
}
{% endhighlight %}

<p>However, the session scope is currently not supported since it leads to a lot of issues (lack of scalability
    due to the need of session stickiness to an instance, high memory usage, serialisation etc.) In a RESTful
    Application, the session should not be used. User data may instead be stored in a cookie; if server-side state
    inevitable, storing it in a shared data store (e.g. a shared JCR repository or relational DB) and retrieving it upon
    request is a much more scalable, cleaner solution.</p>
</section>