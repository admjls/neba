<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>io.neba.neba-delivery-aem</artifactId>
    <name>NEBA delivery AEM</name>
    <packaging>content-package</packaging>

    <description>Packages NEBA with runtime dependencies for deployment in Adobe AEM</description>

    <parent>
        <groupId>io.neba</groupId>
        <artifactId>io.neba.neba-parent</artifactId>
        <version>3.12.0.AEM61-FORMS-SNAPSHOT</version>
        <relativePath>../parent/pom.xml</relativePath>
    </parent>

    <properties>
        <neba.installation.path>/apps/neba/install</neba.installation.path>
        <spring.artifacts.workdir>${project.build.directory}/spring-artifacts</spring.artifacts.workdir>
    </properties>

    <dependencies>
        <!-- Internal dependencies -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>io.neba.neba-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>io.neba.neba-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- External dependencies -->
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <!-- Process and filter all .xml resources  -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <!-- Copy resources directly to target to add content to the content packgage plugin's "vault-work" directory -->
                <targetPath>${project.build.directory}</targetPath>
            </resource>
            <!-- Process and do not filter all non-xml resources (binaries)  -->
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/*.xml</exclude>
                </excludes>
                <!-- Copy resources directly to target to add content to the content packgage plugin's "vault-work" directory -->
                <targetPath>${project.build.directory}</targetPath>
            </resource>
        </resources>
        <plugins>
            <!-- Omit the binary resources. They are shipped anyways. -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <configuration>
                    <excludeResources>true</excludeResources>
                </configuration>
            </plugin>

            <!-- Build the content package including bundles with customized manifests (those are already copied to the target/vault-work directory) -->
            <plugin>
                <groupId>com.day.jcr.vault</groupId>
                <artifactId>content-package-maven-plugin</artifactId>
                <configuration>
                    <builtContentDirectory>${project.build.directory}/vault.work</builtContentDirectory>
                    <failOnMissingEmbed>true</failOnMissingEmbed>
                    <embeddeds>
                        <embedded>
                            <groupId>org.apache.velocity</groupId>
                            <artifactId>velocity</artifactId>
                            <target>${neba.installation.path}</target>
                        </embedded>
                        <embedded>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-aop</artifactId>
                            <target>${neba.installation.path}</target>
                        </embedded>
                        <embedded>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-webmvc</artifactId>
                            <target>${neba.installation.path}</target>
                        </embedded>
                        <embedded>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>io.neba.neba-core</artifactId>
                            <target>${neba.installation.path}</target>
                        </embedded>
                        <embedded>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>io.neba.neba-api</artifactId>
                            <target>${neba.installation.path}</target>
                        </embedded>
                    </embeddeds>
                    <filters>
                        <filter>
                            <mode>replace</mode>
                            <root>/apps/neba</root>
                        </filter>
                    </filters>
                </configuration>
                <extensions>true</extensions>
            </plugin>
        </plugins>
    </build>
</project>
